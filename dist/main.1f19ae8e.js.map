{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX,EAA4C;;AAC5C,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,MAAM,qvDAAV,EAmDA;;AACA,IAAIC,OAAO,GAAG,EAAd,EAAkB;;AAClB,IAAIC,CAAC,GAAG,CAAC,CAAT,EAAY;AACZ;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACfC,EAAAA,UAAU,CAAC,YAAM;AACfF,IAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;;AACA,QAAGF,MAAM,CAACE,CAAD,CAAN,KAAc,IAAjB,EAAsB;AAClBD,MAAAA,OAAO,IAAI,MAAX;AACH,KAFD,MAEM,IAAGD,MAAM,CAACE,CAAD,CAAN,KAAc,GAAjB,EAAqB;AACvBD,MAAAA,OAAO,IAAI,QAAX;AACH,KAFK,MAEA;AACFA,MAAAA,OAAO,IAAID,MAAM,CAACE,CAAD,CAAjB;AACH,KARc,CASf;AACA;AACA;;;AACKN,IAAAA,IAAI,CAACS,SAAL,GAAiBJ,OAAjB,CAZU,CAYgB;;AAC1BF,IAAAA,KAAK,CAACM,SAAN,GAAkBL,MAAM,CAACM,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAlB;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAkB,KAAlB,EAdU,CAcgB;;AAC1BZ,IAAAA,IAAI,CAACY,QAAL,CAAc,CAAd,EAAgB,KAAhB,EAfU,CAec;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIN,CAAC,GAAGF,MAAM,CAACS,MAAP,GAAc,CAAtB,EAAyB;AACvBN,MAAAA,IAAI;AACL,KAFD,MAEO,CACN,CA1Bc,CA0Bb;;AACH,GA3BS,EA2BP,EA3BO,CAAV;AA4BD,CA7BD,EA6BG;;;AACCA,IAAI,IAER;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["let html = document.querySelector(\"#html\"); //首先我们来获取 index.html 里的 demo 。\nlet style = document.querySelector('#style');\nlet string = `/* 你好，我叫何南松\n * 接下来我演示一下我的前端功底\n * 现在我要对这个名字进行居中并加大字体加粗\n * 首先我准备一个 div\n */\n#div1{\n    border: 1px solid red;\n    width: 200px;\n    height: 200px;\n}\nbody{\n    color: red;\n}\n/* 接下来，我要把 div 变成一个八卦图，\n * 注意看好了\n * 首先，把 div 变成一个圆圈\n */\n#div1{\n    border-radius: 50%;\n    box-shadow: 0 0 10px rgba(0,0,0,0.5);\n    border: none;\n} \n/* 八卦是由阴阳一黑一白组成的*/\n#div1{\n    background: rgb(255,255,255);\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\n}\n/*加两个神秘的小球*/\n#div1::before{\n    width: 100px;\n    height: 100px;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);  \n    background: black;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\n}\n#div1::after{\n    width: 100px;\n    height: 100px;\n    bottom: 0;\n    left: 50%;\n    transform: translateX(-50%);  \n    background: white;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(28,28,28,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\n}\n/*注意，伪元素里面是不能再有伪元素的。*/\n\n`;\n// string = string.replace(/\\n/g, \"<br>\"); //在后面直接 1 对 4 了之后，就不需要了。\nlet string2 = \"\"; //为了完成 1 对 4 ，要再声明一个字符串。\nlet n = -1; //要找一个东西来记住当前是第几行。\n// demo.innerHTML = string.substring(0, n); //在 demo 里面写一个 1 ,通过 innerHTML 可以来添加。\n\n// setTimeout(()=>{\n//     n = n + 1\n//     demo.innerHTML = n; //3000毫秒之后，等于 2 。但 setTimeout 只会执行一次。所以我们换 setInterval\n// }, 3000) //3秒 等于 3000毫秒 。\n\n// setInterval(()=>{ //setInterval 是每 3 秒钟都会执行一次。\n//     n = n + 1;\n//     demo.innerHTML = n;\n// },1000)\n//但老手一般也不用 setInterval ，而是用递归的 setTimeout 。\n\nlet step = () => {\n  setTimeout(() => {\n    n = n + 1;\n    if(string[n] === \"\\n\"){\n        string2 += \"<br>\";\n    }else if(string[n] === \" \"){\n        string2 += \"&nbsp;\"\n    }else {\n        string2 += string[n];\n    }\n    // demo.innerHTML = string.substring(0, n); //不写 innerHTML 用 string2 来做\n    // if () {\n    //   //如果是回车就不照搬，要 1 对 4\n         html.innerHTML = string2; //再将 string2 写到 demo 里面。\n         style.innerHTML = string.substring(0,n);\n         window.scrollTo(0,99999); //确保滚动条定位到最新出现的代码的位置，x 轴不变所以是 0 。\n         html.scrollTo(0,99999); //还要确保在手机页面也是一样，在手机页面就是滚动 div 的滚动条。\n    // } else {\n    //   //如果不是回车就照搬\n    //   string2 += string[n]; //string2 = string2 + string[n];\n    //   demo.innerHTML = string2; //再将 string2 写到 demo 里面。\n    // }\n    // console.log(string2);\n    // console.log(demo.innerHTML);\n    if (n < string.length-1) {\n      step();\n    } else {\n    } //如果 n 小于等于 10 ，我就 step ，否则什么都不做。\n  }, 50);\n}; //把 setTimeout 要做的事情封装成一个函数。\n    step();\n\n// setTimeout(()=>{\n//     step()\n//     setTimeout(()=>{\n//         step()\n//         setTimeout(()=>{\n//             step()\n//         },1000)\n//     },1000) //然后我们每一秒钟就调用一次这个 step 函数。\n// },1000)\n"]}